<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="/informationFavicon.png" type="image/x-icon">
    <link rel="stylesheet" href="/css/style.css">
    <title>Guides</title>
</head>
<body>
    <div class="main-content centerGuidebox">
        <%- include("partials/navbar") %>
        <div class="main-title">
            <h1>Guides</h1>
            <input type="text" name="search" id="search" placeholder="search...">
        </div>
        <div id="guideContainer">
            <% guides.forEach(guide => { %> 
                <div class="guideBox" data-title="<%= guide.title %>">
                    <a href="/guide/<%= guide._id %>"><%= guide.title %></a>
                </div>
            <% }) %>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const searchInput = document.getElementById('search');
            const guideContainer = document.getElementById('guideContainer');
            const guideBoxes = guideContainer.getElementsByClassName('guideBox');
            console.log("Loaded Search");
    
            searchInput.addEventListener('input', () => {
                const filter = searchInput.value.toLowerCase(); // Get the current input value
                console.log("Changed to lowercase", filter); // Fixed the console log to use 'filter'
                console.log(guideBoxes);
                
    
                Array.from(guideBoxes).forEach(guideBox => {
                    const title = guideBox.getAttribute('data-title');
                    
                    // Only proceed if the title exists and is not null
                    if (title) {
                        if (title.toLowerCase().includes(filter)) {
                            guideBox.style.display = ''; // Show the guide box
                        } else {
                            guideBox.style.display = 'none'; // Hide the guide box
                        }
                    }
                });
            });
        });

        // Check if the URL contains the alert query parameter
        const urlParams = new URLSearchParams(window.location.search);
      
        if (urlParams.has('alert')) {
          const alertType = urlParams.get('alert');
      
          if (alertType === 'sessionExpired') {
            alert('Your session has expired. Please log in again.');
          } else if (alertType === 'invalidToken') {
            alert('Invalid session. Please log in again.');
          }
        }
    </script>
</body>
</html>